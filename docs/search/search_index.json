{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Setup an account Reach out to our support team for access to the beta Choose an integration method Component API Javascript API Create an audience and offer Offer Types Events Generate and redeem unique QR codes for each token in your audience. We provide an app to scan the generated QR codes to validate access at the event. No development work is required. URL Content Your NFT holders are given access to a private URL once they have verified ownership. Redirected URL with include get parameters and a signature that is verifiable with a public key for your account. offer : the ID for the offer contract : the contract address for the verified token token : the token id for the verified token sig : the PKI signature for the URL Sample URL structure: https://api.getpercs.com/test-redemption-url?offer=1&contract=0x7ab2352b1d2e185560494d5e577f9d3c238b78c5&token=1220&sig=6W64XOq2%2BSMP5Dvh0vHiDJ9K%2B5fnIpHIZrWiI1pvMMlGJpcmVsoTsUMSqP%2F1Sks4PnsUkVTZ762Vn1eYD74vAA%3D%3D You can verify the URL on the server or client with a public key check. Sample Node.js server code: import { createPublicKey, verify } from \"crypto\" const publicKey = createPublicKey(YOUR_PUBLIC_KEY) /** * @param url The fully qualified URL for the request (host should match the URL configured for your offer) */ function verifyRequestUrl(url) { url = new URL(url); const signature = url.searchParams.get(\"sig\"); url.searchParams.delete(\"sig\"); if (verify(null, Buffer.from(url.toString()), publicKey, Buffer.from(signature, \"base64\"))) { // TODO: Signature is valid, return the content for the given offer } else { // TODO: Signature is invalid, display error } }","title":"Get Started"},{"location":"#getting-started","text":"Setup an account Reach out to our support team for access to the beta Choose an integration method Component API Javascript API Create an audience and offer","title":"Getting Started"},{"location":"#offer-types","text":"","title":"Offer Types"},{"location":"#events","text":"Generate and redeem unique QR codes for each token in your audience. We provide an app to scan the generated QR codes to validate access at the event. No development work is required.","title":"Events"},{"location":"#url-content","text":"Your NFT holders are given access to a private URL once they have verified ownership. Redirected URL with include get parameters and a signature that is verifiable with a public key for your account. offer : the ID for the offer contract : the contract address for the verified token token : the token id for the verified token sig : the PKI signature for the URL Sample URL structure: https://api.getpercs.com/test-redemption-url?offer=1&contract=0x7ab2352b1d2e185560494d5e577f9d3c238b78c5&token=1220&sig=6W64XOq2%2BSMP5Dvh0vHiDJ9K%2B5fnIpHIZrWiI1pvMMlGJpcmVsoTsUMSqP%2F1Sks4PnsUkVTZ762Vn1eYD74vAA%3D%3D You can verify the URL on the server or client with a public key check. Sample Node.js server code: import { createPublicKey, verify } from \"crypto\" const publicKey = createPublicKey(YOUR_PUBLIC_KEY) /** * @param url The fully qualified URL for the request (host should match the URL configured for your offer) */ function verifyRequestUrl(url) { url = new URL(url); const signature = url.searchParams.get(\"sig\"); url.searchParams.delete(\"sig\"); if (verify(null, Buffer.from(url.toString()), publicKey, Buffer.from(signature, \"base64\"))) { // TODO: Signature is valid, return the content for the given offer } else { // TODO: Signature is invalid, display error } }","title":"URL Content"},{"location":"audiences/","text":"Audiences These allow targeting by ETH smart contracts or CSVs of wallet addresses.","title":"Audiences"},{"location":"audiences/#audiences","text":"These allow targeting by ETH smart contracts or CSVs of wallet addresses.","title":"Audiences"},{"location":"component-api/","text":"Component API You can load the library anywhere on the page and update your HTML template to include some tags to present UI for web3 wallet interactions on an existing page Installation Import the script in your header: <script type=\"text/javascript\" src=\"https://api.getpercs.com/client-sdk.js?key=YOUR_KEY_HERE\"></script> Once that is loaded, a global PERCS object will be available with an emitter for events from any components you include on your page. You could also follow the Javascript API docs to load the ES6 version from NPM and initialize manually. Components For these components, scope is either a target audience or offer. Everything will be scoped with your passed API key. Prompt the user to login against a given audience scope. <percs-login-button scope=\"...\" /> Present a simple client-side gating. <percs-gate scope=\"...\">...</percs-gate> Display a widget with a list of all active offers on your account <percs-offers /> You can wrap a buy button in this to trigger a redemption interaction for the given offer. <percs-redeem-button scope=\"...\">Buy Now</percs-redeem-button>","title":"Component API"},{"location":"component-api/#component-api","text":"You can load the library anywhere on the page and update your HTML template to include some tags to present UI for web3 wallet interactions on an existing page","title":"Component API"},{"location":"component-api/#installation","text":"Import the script in your header: <script type=\"text/javascript\" src=\"https://api.getpercs.com/client-sdk.js?key=YOUR_KEY_HERE\"></script> Once that is loaded, a global PERCS object will be available with an emitter for events from any components you include on your page. You could also follow the Javascript API docs to load the ES6 version from NPM and initialize manually.","title":"Installation"},{"location":"component-api/#components","text":"For these components, scope is either a target audience or offer. Everything will be scoped with your passed API key. Prompt the user to login against a given audience scope. <percs-login-button scope=\"...\" /> Present a simple client-side gating. <percs-gate scope=\"...\">...</percs-gate> Display a widget with a list of all active offers on your account <percs-offers /> You can wrap a buy button in this to trigger a redemption interaction for the given offer. <percs-redeem-button scope=\"...\">Buy Now</percs-redeem-button>","title":"Components"},{"location":"javascript-api/","text":"Javascript API Instalation import PERCS from \"@percs/client\"; PERCS.init({ api_key: \"YOUR_KEY_HERE\" }); PERCS.init PERCS.verifyWallet PERCS.getOwnedTokens PERCS.redeemToken PERCS.on","title":"Javascript API"},{"location":"javascript-api/#javascript-api","text":"","title":"Javascript API"},{"location":"javascript-api/#instalation","text":"import PERCS from \"@percs/client\"; PERCS.init({ api_key: \"YOUR_KEY_HERE\" });","title":"Instalation"},{"location":"javascript-api/#percsinit","text":"","title":"PERCS.init"},{"location":"javascript-api/#percsverifywallet","text":"","title":"PERCS.verifyWallet"},{"location":"javascript-api/#percsgetownedtokens","text":"","title":"PERCS.getOwnedTokens"},{"location":"javascript-api/#percsredeemtoken","text":"","title":"PERCS.redeemToken"},{"location":"javascript-api/#percson","text":"","title":"PERCS.on"}]}